[{"path":"https://cboettig.github.io/minioclient/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 minioclient authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://cboettig.github.io/minioclient/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Carl Boettiger. Author, maintainer. Markus Skyttner. Contributor.","code":""},{"path":"https://cboettig.github.io/minioclient/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Boettiger C (2023). minioclient: Interface 'MinIO' Client. https://github.com/cboettig/minioclient, https://cboettig.github.io/minioclient/.","code":"@Manual{,   title = {minioclient: Interface to the 'MinIO' Client},   author = {Carl Boettiger},   year = {2023},   note = {https://github.com/cboettig/minioclient, https://cboettig.github.io/minioclient/}, }"},{"path":[]},{"path":"https://cboettig.github.io/minioclient/index.html","id":"rationale","dir":"","previous_headings":"","what":"Rationale","title":"Interface to the MinIO Client","text":"numerous packages already interface AWS S3 protocol object storage. rely directly calls low-level S3 REST API R packages curl httr, requires significant amounts code provide high-level functionality (e.g. handling authentication, paging results, parsing returned XML), thus prone inefficiency bugs. Many also implicitly assume Amazon underlying provider, making difficult impossible work substantial growing number object stores now conform AWS S3 standard. include NSF’s OpenStorageNetwork, Jetstream2 (based open source Redhat CEPH), NCAR’s Stratus (based Western Digital S3), MinIO Servers (another open source implementation popular companies developers), well Google Cloud Storage’s S3 compatibility mode. contrast, MinIO Client, open-source, AGPL-v3 software developed Go language MinIO team, provides high-performance utility intuitive design working across multiple cloud-based object stores well local filesystems. package provides thin R wrapper around client – maximizing performance minimizing potential maintenance bugs. helper utility provides convenient way install update golang binary across operating systems architectures. client supports parallel threads default, intuitive handling bucket permissions granting revoking anonymous access, persistent configurations across multiple clouds. struggling limitations many different R wrappers S3 object stores, now go-.","code":""},{"path":"https://cboettig.github.io/minioclient/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Interface to the MinIO Client","text":"can install development version minioclient GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"cboettig/minioclient\")"},{"path":"https://cboettig.github.io/minioclient/index.html","id":"minio-client","dir":"","previous_headings":"","what":"MinIO Client","title":"Interface to the MinIO Client","text":"first use, operations attempt install client (prompting) already installed. Users can also install latest version minio client can installed using install_mc. MinIO client designed support multiple endpoints cloud storage, including AWS, Google Cloud Storage (via S3-compatibility), S3 compatible clients open source MinIO Redhat CEPH storage systems. MinIO uses syntax based around aliases allow access across multiple platforms. Aliases can configured using access key pairs allow authenticated access.","code":"library(minioclient) install_mc()"},{"path":"https://cboettig.github.io/minioclient/index.html","id":"aliases","dir":"","previous_headings":"MinIO Client","what":"Aliases","title":"Interface to the MinIO Client","text":"default, client comes pre-configured credentials MinIO play platform, designed public experimental storage examples. can use mc_alias_ls() see clients, specify client want: S3 object storage systems allow access without credentials. Confusingly, attempting access public data invalid credentials still fail, need specify anonymous endpoint credentials. default, mc_alias_set seek use AWS_S3_ENDPOINT, AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY environment, set. allows minioclient used scripts authentication keys passed securely environmental variables. set anonymous access, simply indicate empty credentials, like : Configuration aliases stored persistent configuration file, aliases need created given machine. mc functions specify cloud provider using filepath notation, <ALIAS>/<BUCKET>/<PATH>. instance, can list objects found bucket gbif-open-data-us-east-1, public bucket included AWS Open Data Registry: mc functions can also understand local filesystem paths. absolute path (path starting /), relative path recognized registered alias (Note: careful local folders using name remote aliases!) interpreted local path. instance, can list contents local R/ directory:","code":"mc_alias_ls(\"play\") mc_alias_set(\"anon\", \"s3.amazonaws.com\", access_key = \"\", secret_key = \"\") mc_ls(\"anon/gbif-open-data-us-east-1\") #> [1] \"index.html\"  \"occurrence/\" mc_ls(\"R\") #>  [1] \"install_mc.R\"    \"mc.R\"            \"mc_alias.R\"      \"mc_anonymous.R\"  #>  [5] \"mc_cat.R\"        \"mc_config_set.R\" \"mc_cp.R\"         \"mc_diff.R\"       #>  [9] \"mc_du.R\"         \"mc_head.R\"       \"mc_ls.R\"         \"mc_mb.R\"         #> [13] \"mc_mirror.R\"     \"mc_mv.R\"         \"mc_rb.R\"         \"mc_rm.R\"         #> [17] \"mc_sql.R\"        \"mc_stat.R\""},{"path":"https://cboettig.github.io/minioclient/index.html","id":"uploads--downloads","dir":"","previous_headings":"","what":"Uploads & Downloads","title":"Interface to the MinIO Client","text":"notation makes easy move data local remote systems, even two remote systems. Let’s copy index.html file GBIF local file system. Just prove indeed local copy, can list local directory: object store adequate permissions, can create new buckets: can copy files directories remote bucket: Note use recursive = TRUE transfer objects matching pattern. S3 object stores, file paths really just prefixes, thus query includes everything R folder, also README.md, since also matches prefix. (used prefix R/, README.md matched R scripts go directly play_bucket root instead R/ sub-path.) can examine disk usage remote objects directories: can also adjust permissions anonymous access: Public objects can accessed directly HTTPS connection using endpoint URL, bucket name path:","code":"mc_cp(\"anon/gbif-open-data-us-east-1/index.html\", \"gbif.html\") fs::file_info(\"gbif.html\") #> # A tibble: 1 × 18 #>   path       type     size permissions modification_time   user  group device_id #>   <fs::path> <fct> <fs::b> <fs::perms> <dttm>              <chr> <chr>     <dbl> #> 1 gbif.html  file    31.6K rw-r--r--   2023-08-10 18:33:12 cboe… cboe…     66307 #> # ℹ 10 more variables: hard_links <dbl>, special_device_id <dbl>, inode <dbl>, #> #   block_size <dbl>, blocks <dbl>, flags <int>, generation <dbl>, #> #   access_time <dttm>, change_time <dttm>, birth_time <dttm> random_name <- paste0(sample(letters, 12, replace = TRUE), collapse = \"\") play_bucket <- paste0(\"play/play-\", random_name)  mc_mb(play_bucket) #> Bucket created successfully `play/play-nwqvinphaeoh`. mc_cp(\"anon/gbif-open-data-us-east-1/index.html\", play_bucket) mc_cp(\"R/\", play_bucket, recursive = TRUE, verbose = TRUE) #> `/home/cboettig/cboettig/minioclient/R/mc.R` -> `play/play-nwqvinphaeoh/mc.R` #> `/home/cboettig/cboettig/minioclient/R/mc_alias.R` -> `play/play-nwqvinphaeoh/mc_alias.R` #> `/home/cboettig/cboettig/minioclient/R/install_mc.R` -> `play/play-nwqvinphaeoh/install_mc.R` #> `/home/cboettig/cboettig/minioclient/R/mc_anonymous.R` -> `play/play-nwqvinphaeoh/mc_anonymous.R` #> `/home/cboettig/cboettig/minioclient/R/mc_cat.R` -> `play/play-nwqvinphaeoh/mc_cat.R` #> `/home/cboettig/cboettig/minioclient/R/mc_config_set.R` -> `play/play-nwqvinphaeoh/mc_config_set.R` #> `/home/cboettig/cboettig/minioclient/R/mc_cp.R` -> `play/play-nwqvinphaeoh/mc_cp.R` #> `/home/cboettig/cboettig/minioclient/R/mc_diff.R` -> `play/play-nwqvinphaeoh/mc_diff.R` #> `/home/cboettig/cboettig/minioclient/R/mc_du.R` -> `play/play-nwqvinphaeoh/mc_du.R` #> `/home/cboettig/cboettig/minioclient/R/mc_head.R` -> `play/play-nwqvinphaeoh/mc_head.R` #> `/home/cboettig/cboettig/minioclient/R/mc_ls.R` -> `play/play-nwqvinphaeoh/mc_ls.R` #> `/home/cboettig/cboettig/minioclient/R/mc_mb.R` -> `play/play-nwqvinphaeoh/mc_mb.R` #> `/home/cboettig/cboettig/minioclient/R/mc_mirror.R` -> `play/play-nwqvinphaeoh/mc_mirror.R` #> `/home/cboettig/cboettig/minioclient/R/mc_mv.R` -> `play/play-nwqvinphaeoh/mc_mv.R` #> `/home/cboettig/cboettig/minioclient/R/mc_rb.R` -> `play/play-nwqvinphaeoh/mc_rb.R` #> `/home/cboettig/cboettig/minioclient/R/mc_rm.R` -> `play/play-nwqvinphaeoh/mc_rm.R` #> `/home/cboettig/cboettig/minioclient/R/mc_sql.R` -> `play/play-nwqvinphaeoh/mc_sql.R` #> `/home/cboettig/cboettig/minioclient/R/mc_stat.R` -> `play/play-nwqvinphaeoh/mc_stat.R` #> Total: 0 B, Transferred: 21.60 KiB, Speed: 417.13 KiB/s mc_du(play_bucket) mc_anonymous_set(play_bucket, \"download\") bucket <-  basename(play_bucket) # strip alias from path # use full domain name as prefix instead: public_url <- paste0(\"https://play.min.io/\", bucket, \"/index.html\") download.file(public_url, \"index.html\", quiet = TRUE)"},{"path":"https://cboettig.github.io/minioclient/index.html","id":"additional-functionality","dir":"","previous_headings":"","what":"Additional functionality","title":"Interface to the MinIO Client","text":"command supported minio client can accessed using function mc(). function can used place methods, access additional methods wrapper exists, see mc(\"-h\") complete list. R functions mc_ls() merely helpful wrappers around generic mc() utility, e.g. mc(\"ls play\") equivalent mc_ls(\"play\"). Providing helper methods allows tab-completion discovery functions, R-based documentation, improved handling display behavior (e.g. verbose=FALSE default certain commands.) See official mc client docs details. addition usual R documentation, users can display full help information method using argument \"-h\". includes details optional flags examples. can now use arbitrary mc commands (see quickstart). example, examine file information confirm eTags (md5sums ) match objects:","code":"mc_du(\"-h\") mc(paste(\"stat\", \"anon/gbif-open-data-us-east-1/index.html\", paste0(play_bucket, \"/index.html\")))"},{"path":"https://cboettig.github.io/minioclient/reference/install_mc.html","id":null,"dir":"Reference","previous_headings":"","what":"install the mc client — install_mc","title":"install the mc client — install_mc","text":"install mc client","code":""},{"path":"https://cboettig.github.io/minioclient/reference/install_mc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"install the mc client — install_mc","text":"","code":"install_mc(   os = system_os(),   arch = system_arch(),   path = minio_path(),   force = FALSE )"},{"path":"https://cboettig.github.io/minioclient/reference/install_mc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"install the mc client — install_mc","text":"os operating system arch architecture path destination binary installed. force install even binary already found. Can used force upgrade.","code":""},{"path":"https://cboettig.github.io/minioclient/reference/install_mc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"install the mc client — install_mc","text":"path minio binary (invisibly)","code":""},{"path":"https://cboettig.github.io/minioclient/reference/install_mc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"install the mc client — install_mc","text":"function just convenience wrapper prebuilt MINIO binaries, https://dl.min.io/client/mc/release/. support Windows, Mac, Linux Intel/AMD (amd64) ARM architectures. details, see official MINIO docs operating system, e.g. https://min.io/docs/minio/macos/index.html. NOTE: want install default location, simply set option \"minioclient.dir\", appropriate location directory containing \"mc\" binary, e.g. options(\"minioclient.dir\" = \"~/.mc\"). also used location config directory. Note package automatically use MINIO available $PATH (promote security portability design).","code":""},{"path":"https://cboettig.github.io/minioclient/reference/install_mc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"install the mc client — install_mc","text":"","code":"if (FALSE) { # interactive() install_mc()  # Force upgrade install_mc(force=TRUE) }"},{"path":"https://cboettig.github.io/minioclient/reference/mc.html","id":null,"dir":"Reference","previous_headings":"","what":"mc — mc","title":"mc — mc","text":"MINIO Client","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mc — mc","text":"","code":"mc(command, ..., path = minio_path(), verbose = interactive())"},{"path":"https://cboettig.github.io/minioclient/reference/mc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mc — mc","text":"command space-delimited text string mc command (starting mc ...) ... additional arguments processx::run() path location mc executable installed. default use OS-appropriate storage location. verbose print output?","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mc — mc","text":"Returns list processx::run(), components status, stdout, stderr, timeout; invisibly.","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"mc — mc","text":"function forms basis available commands. utility can run mc command supported official minio client, see https://min.io/docs/minio/linux/reference/minio-mc.html. R package provides wrappers common use cases, provide natural R syntax native documentation.","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_alias_ls.html","id":null,"dir":"Reference","previous_headings":"","what":"List all configured aliases — mc_alias_ls","title":"List all configured aliases — mc_alias_ls","text":"List configured aliases","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_alias_ls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all configured aliases — mc_alias_ls","text":"","code":"mc_alias_ls(alias = \"\")"},{"path":"https://cboettig.github.io/minioclient/reference/mc_alias_ls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all configured aliases — mc_alias_ls","text":"alias optional argument, display specified alias","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_alias_ls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all configured aliases — mc_alias_ls","text":"Configured aliases, including secret keys!","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_alias_ls.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List all configured aliases — mc_alias_ls","text":"Note available","code":""},{"path":[]},{"path":"https://cboettig.github.io/minioclient/reference/mc_alias_set.html","id":null,"dir":"Reference","previous_headings":"","what":"mc alias set — mc_alias_set","title":"mc alias set — mc_alias_set","text":"Set new alias minio client, possibly using env var defaults.","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_alias_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mc alias set — mc_alias_set","text":"","code":"mc_alias_set(   alias = \"minio\",   endpoint = Sys.getenv(\"AWS_S3_ENDPOINT\", \"s3.amazonaws.com\"),   access_key = Sys.getenv(\"AWS_ACCESS_KEY_ID\"),   secret_key = Sys.getenv(\"AWS_SECRET_ACCESS_KEY\"),   scheme = \"https\" )"},{"path":"https://cboettig.github.io/minioclient/reference/mc_alias_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mc alias set — mc_alias_set","text":"alias short name endpoint, default minio endpoint endpoint domain name access_key access key (user), reads AWS env vars default secret_key secret access key, reads AWS env vars default scheme https http (e.g. local machine )","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_alias_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mc alias set — mc_alias_set","text":"Returns list processx::run(), components status, stdout, stderr, timeout; invisibly.","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_alias_set.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"mc alias set — mc_alias_set","text":"https://min.io/docs/minio/linux/reference/minio-mc.html. Note keys can omitted anonymous use.","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_alias_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"mc alias set — mc_alias_set","text":"","code":"if (FALSE) { # interactive()  mc_alias_set() }"},{"path":"https://cboettig.github.io/minioclient/reference/mc_anonymous_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Set anonymous access policy — mc_anonymous_set","title":"Set anonymous access policy — mc_anonymous_set","text":"function uses mc command set anonymous access policy specified target.","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_anonymous_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set anonymous access policy — mc_anonymous_set","text":"","code":"mc_anonymous_set(   target,   policy = c(\"download\", \"upload\", \"public\", \"private\"),   verbose = interactive() )"},{"path":"https://cboettig.github.io/minioclient/reference/mc_anonymous_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set anonymous access policy — mc_anonymous_set","text":"target Character string specifying target cloud storage bucket object policy Character string specifying anonymous access policy. Must one \"download\", \"upload\", \"public\" (upload download), \"private\". verbose print output?","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_anonymous_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set anonymous access policy — mc_anonymous_set","text":"Returns list processx::run(), components status, stdout, stderr, timeout; invisibly.","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_anonymous_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set anonymous access policy — mc_anonymous_set","text":"","code":"if (FALSE) { # interactive() # create a test bucket on the 'play' server mc_mb(\"play/minioclient-test\")  # Set anonymous access policy to download mc_anonymous_set(\"play/minioclient-test/file.txt\", policy = \"download\")  # Set anonymous access policy to upload mc_anonymous_set(\"play/minioclient-test/directory\", policy = \"upload\")  # Set anonymous access policy to public mc_anonymous_set(\"play/minioclient-test/file.txt\", policy = \"public\")  # Set anonymous access policy to private (default policy for new buckets) mc_anonymous_set(\"play/minioclient-test/directory\", policy = \"private\")  mc_rb(\"play/minioclient-test\") }"},{"path":"https://cboettig.github.io/minioclient/reference/mc_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Display object contents — mc_cat","title":"Display object contents — mc_cat","text":"cat command returns contents object string. can useful reading smaller files (without first downloading disk).","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display object contents — mc_cat","text":"","code":"mc_cat(target, offset = 0, tail = 0, flags = \"\")"},{"path":"https://cboettig.github.io/minioclient/reference/mc_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display object contents — mc_cat","text":"target character string specifying target directory path. offset start offset, default 0 specified tail tail number bytes ending file, default 0 specified flags additional flags passed cat command. Default empty string.","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_cat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display object contents — mc_cat","text":"character string contents file","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_cat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display object contents — mc_cat","text":"","code":"if (FALSE) { # interactive() # upload a file to a bucket and read it back install_mc() mc_mb(\"play/mcr\") mc_cp(system.file(package = \"minioclient\", \"DESCRIPTION\"), \"play/mcr/DESCRIPTION\") mc_cat(\"play/mcr/DESCRIPTION\") }"},{"path":"https://cboettig.github.io/minioclient/reference/mc_config_set.html","id":null,"dir":"Reference","previous_headings":"","what":"mc_config_set — mc_config_set","title":"mc_config_set — mc_config_set","text":"Edit config files, e.g. add sessionToken","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_config_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mc_config_set — mc_config_set","text":"","code":"mc_config_set(alias, key, value, json = file.path(minio_path(), \"config.json\"))"},{"path":"https://cboettig.github.io/minioclient/reference/mc_config_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mc_config_set — mc_config_set","text":"alias configured alias, see mc_alias_set() key parameter name, e.g. sessionToken value value set parameter json path config","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_config_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mc_config_set — mc_config_set","text":"updates configuration returns silently (NULL).","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_config_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"mc_config_set — mc_config_set","text":"","code":"if (FALSE) { # interactive()  mc_config_set(\"play\", key=\"sessionToken\", value=\"MyTmpSessionToken\") }"},{"path":"https://cboettig.github.io/minioclient/reference/mc_cp.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy files or directories between servers — mc_cp","title":"Copy files or directories between servers — mc_cp","text":"commonly used upload download files local filesystem remote S3 store.","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_cp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy files or directories between servers — mc_cp","text":"","code":"mc_cp(from, to = \"\", recursive = FALSE, flags = \"\", verbose = FALSE)"},{"path":"https://cboettig.github.io/minioclient/reference/mc_cp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy files or directories between servers — mc_cp","text":"Character string specifying source file directory path. Can accept vector file paths well. Character string specifying destination path. recursive Logical indicating whether recursively copy directories. Default FALSE. flags additional flags cp verbose Logical indicating whether report files copied. Default FALSE.","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_cp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy files or directories between servers — mc_cp","text":"Returns list processx::run(), components status, stdout, stderr, timeout; invisibly.","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_cp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Copy files or directories between servers — mc_cp","text":"see mc(\"cp -h\") details.","code":""},{"path":[]},{"path":"https://cboettig.github.io/minioclient/reference/mc_cp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Copy files or directories between servers — mc_cp","text":"","code":"if (FALSE) { # Copy a file mc_cp(\"local/path/to/file.txt\", \"alias/bucket/path/file.txt\")  # Copy a directory recursively mc_cp(\"local/directory\", \"alias/bucket/path/to/directory\", recursive = TRUE)  }"},{"path":"https://cboettig.github.io/minioclient/reference/mc_du.html","id":null,"dir":"Reference","previous_headings":"","what":"Show disk usage for a target path — mc_du","title":"Show disk usage for a target path — mc_du","text":"Show disk usage target path","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_du.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show disk usage for a target path — mc_du","text":"","code":"mc_du(target, flags = \"\")"},{"path":"https://cboettig.github.io/minioclient/reference/mc_du.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show disk usage for a target path — mc_du","text":"target alias/bucket list flags optional additional flags","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_du.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show disk usage for a target path — mc_du","text":"Returns list processx::run(), components status, stdout, stderr, timeout; invisibly.","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_du.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Show disk usage for a target path — mc_du","text":"help, run mc_du(\"-h\")","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_du.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show disk usage for a target path — mc_du","text":"","code":"if (FALSE) { # interactive()  # create a new bucket mc_mb(\"play/minioclient-test\")  # no disk usage on new bucket mc_du(\"play/minioclient-test\")  # clean up mc_rb(\"play/minioclient-test\") }"},{"path":"https://cboettig.github.io/minioclient/reference/mc_head.html","id":null,"dir":"Reference","previous_headings":"","what":"Display first few lines of an object — mc_head","title":"Display first few lines of an object — mc_head","text":"head command returns first n lines object string. can useful inspecting content large file (without first download store disk locally).","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_head.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display first few lines of an object — mc_head","text":"","code":"mc_head(target, n = 10, flags = \"\")"},{"path":"https://cboettig.github.io/minioclient/reference/mc_head.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display first few lines of an object — mc_head","text":"target character string specifying target directory path. n integer number lines read beginning, default 10 flags additional flags passed cat command. Default empty string.","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_head.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display first few lines of an object — mc_head","text":"character string contents file","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_head.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display first few lines of an object — mc_head","text":"","code":"if (FALSE) { # interactive() # upload a CSV file install_mc() tf <- tempfile() write.csv(iris, tf, row.names = FALSE) mc_mb(\"play/iris\") mc_cp(tf, \"play/iris/iris.csv\")  # read first 13 lines from the CSV (header + 12 rows of data) read.csv(text = mc_head(\"play/iris/iris.csv\", n = 13)) }"},{"path":"https://cboettig.github.io/minioclient/reference/mc_ls.html","id":null,"dir":"Reference","previous_headings":"","what":"List files and directories using mc command — mc_ls","title":"List files and directories using mc command — mc_ls","text":"function uses mc command list files directories specified target location.","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_ls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List files and directories using mc command — mc_ls","text":"","code":"mc_ls(target, recursive = FALSE, details = FALSE)"},{"path":"https://cboettig.github.io/minioclient/reference/mc_ls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List files and directories using mc command — mc_ls","text":"target character vector specifying target directory path(s). recursive Logical indicating whether recursively list directories. Default FALSE. details logical, default FALSE; TRUE data frame details directory listing returned.","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_ls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List files and directories using mc command — mc_ls","text":"vector file directory names (\"keys\" minio parlance) , details TRUE, data.frame directory listing information","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_ls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List files and directories using mc command — mc_ls","text":"","code":"if (FALSE) { # interactive()  # list all buckets on play server mc_ls(\"play/\") mc_ls(\"play\", details = TRUE) }"},{"path":"https://cboettig.github.io/minioclient/reference/mc_mb.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new S3 bucket using mc command — mc_mb","title":"Create a new S3 bucket using mc command — mc_mb","text":"Create new S3 bucket using mc command","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_mb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new S3 bucket using mc command — mc_mb","text":"","code":"mc_mb(bucket, ignore_existing = TRUE, flags = \"\", verbose = TRUE)"},{"path":"https://cboettig.github.io/minioclient/reference/mc_mb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new S3 bucket using mc command — mc_mb","text":"bucket Character string specifying name bucket create. ignore_existing error bucket already exists flags additional flags, see mc_mb(\"-h\") details. verbose print output?","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_mb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new S3 bucket using mc command — mc_mb","text":"Returns list processx::run(), components status, stdout, stderr, timeout; invisibly.","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_mb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new S3 bucket using mc command — mc_mb","text":"","code":"if (FALSE) { # interactive()  # Create a new bucket named \"my-bucket\" mc_mb(\"play/my-bucket\") }"},{"path":"https://cboettig.github.io/minioclient/reference/mc_mirror.html","id":null,"dir":"Reference","previous_headings":"","what":"Mirror files and directories using mc command — mc_mirror","title":"Mirror files and directories using mc command — mc_mirror","text":"function uses mc command mirror files directories one location another.","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_mirror.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mirror files and directories using mc command — mc_mirror","text":"","code":"mc_mirror(   from,   to,   overwrite = FALSE,   remove = FALSE,   flags = \"\",   verbose = FALSE )"},{"path":"https://cboettig.github.io/minioclient/reference/mc_mirror.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mirror files and directories using mc command — mc_mirror","text":"Character string specifying source file directory path. Character string specifying destination path. overwrite Logical indicating whether overwrite existing files. Default FALSE. remove Logical indicating whether remove extraneous files destination. Default FALSE. flags Additional flags passed mirror command. Default empty string. verbose Logical indicating whether display verbose output. Default FALSE.","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_mirror.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mirror files and directories using mc command — mc_mirror","text":"Returns list processx::run(), components status, stdout, stderr, timeout; invisibly.","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_mirror.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mirror files and directories using mc command — mc_mirror","text":"","code":"if (FALSE) { # interactive()  # Mirror files and directories from source to destination mc_mirror(\"path/to/source\", \"path/to/destination\")  # Mirror files and directories with overwrite and remove options mc_mirror(\"path/to/source\", \"path/to/destination\",            overwrite = TRUE, remove = TRUE)  # Mirror files and directories with additional flags and verbose output mc_mirror(\"path/to/source\", \"path/to/destination\",            flags = \"--exclude '*.txt'\", verbose = TRUE) }"},{"path":"https://cboettig.github.io/minioclient/reference/mc_mv.html","id":null,"dir":"Reference","previous_headings":"","what":"move or rename files or directories between servers — mc_mv","title":"move or rename files or directories between servers — mc_mv","text":"move rename files directories servers","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_mv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"move or rename files or directories between servers — mc_mv","text":"","code":"mc_mv(from, to, recursive = FALSE, flags = \"\", verbose = FALSE)"},{"path":"https://cboettig.github.io/minioclient/reference/mc_mv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"move or rename files or directories between servers — mc_mv","text":"Character string specifying source file directory path. Can accept vector file paths well. Character string specifying destination path. recursive Logical indicating whether recursively move directories. Default FALSE. flags additional flags mv verbose Logical indicating whether report files copied. Default FALSE.","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_mv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"move or rename files or directories between servers — mc_mv","text":"Returns list processx::run(), components status, stdout, stderr, timeout; invisibly.","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_mv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"move or rename files or directories between servers — mc_mv","text":"see mc(\"mv -h\") details.","code":""},{"path":[]},{"path":"https://cboettig.github.io/minioclient/reference/mc_mv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"move or rename files or directories between servers — mc_mv","text":"","code":"if (FALSE) { # interactive()  # move a file mc_mv(\"local/path/to/file.txt\", \"alias/bucket/path/file.txt\")  # move a directory recursively mc_mv(\"local/directory\", \"alias/bucket/path/to/directory\", recursive = TRUE) }"},{"path":"https://cboettig.github.io/minioclient/reference/mc_rb.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove an S3 bucket using mc command — mc_rb","title":"Remove an S3 bucket using mc command — mc_rb","text":"Remove S3 bucket using mc command","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_rb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove an S3 bucket using mc command — mc_rb","text":"","code":"mc_rb(bucket, force = FALSE)"},{"path":"https://cboettig.github.io/minioclient/reference/mc_rb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove an S3 bucket using mc command — mc_rb","text":"bucket Character string specifying name bucket remove force Delete bucket without confirmation non-interactive mode","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_rb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove an S3 bucket using mc command — mc_rb","text":"Returns list processx::run(), components status, stdout, stderr, timeout; invisibly.","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_rb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove an S3 bucket using mc command — mc_rb","text":"","code":"if (FALSE) { # interactive()  # Create a new bucket named \"my-bucket\" on the \"play\" system mc_mb(\"play/my-bucket\") mc_rb(\"play/my-bucket\") }"},{"path":"https://cboettig.github.io/minioclient/reference/mc_rm.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove files or directories — mc_rm","title":"Remove files or directories — mc_rm","text":"function uses mc command remove files directories specified target location.","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_rm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove files or directories — mc_rm","text":"","code":"mc_rm(target, recursive = FALSE, flags = \"\", verbose = FALSE)"},{"path":"https://cboettig.github.io/minioclient/reference/mc_rm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove files or directories — mc_rm","text":"target Character string specifying target file directory path removed. recursive Logical indicating whether recursively remove directories. Default FALSE. flags Additional flags passed rm command. Default empty string. verbose Logical indicating whether list files removed. Default FALSE.","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_rm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove files or directories — mc_rm","text":"Returns list processx::run(), components status, stdout, stderr, timeout; invisibly.","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_rm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove files or directories — mc_rm","text":"see mc(\"rm -h\") details.","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_rm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove files or directories — mc_rm","text":"","code":"if (FALSE) { # interactive()  # Remove a file mc_rm(\"path/to/file.txt\")  # Remove a directory recursively mc_rm(\"path/to/directory\", recursive = TRUE) }"},{"path":"https://cboettig.github.io/minioclient/reference/mc_sql.html","id":null,"dir":"Reference","previous_headings":"","what":"Use the S3 variant of SQL to query a minio object — mc_sql","title":"Use the S3 variant of SQL to query a minio object — mc_sql","text":"S3 Select API can used CSV JSON objects stored minio. minio server runs MINIO_API_SELECT_PARQUET=, also parquet files can queried.","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_sql.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use the S3 variant of SQL to query a minio object — mc_sql","text":"","code":"mc_sql(   target,   query = \"select * from S3Object\",   recursive = TRUE,   verbose = FALSE )"},{"path":"https://cboettig.github.io/minioclient/reference/mc_sql.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use the S3 variant of SQL to query a minio object — mc_sql","text":"target character alias path specification minio object (.csv, .json .parquet file) query character string sql query, default \"select * S3Object\" recursive logical, default TRUE, allowing s3 select query work across minio ALIAS/PATH specification verbose logical, default FALSE","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_sql.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use the S3 variant of SQL to query a minio object — mc_sql","text":"SQL query results data.frame class tbl_df","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_sql.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Use the S3 variant of SQL to query a minio object — mc_sql","text":"See https://min.io/docs/minio/linux/reference/minio-mc/mc-sql.html# https://github.com/minio/minio/blob/master/docs/select/README.md example \"select s.* S3Object s limit 10\" valid syntax. examples query syntax : https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-select-sql-reference-select.html","code":""},{"path":"https://cboettig.github.io/minioclient/reference/mc_sql.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use the S3 variant of SQL to query a minio object — mc_sql","text":"","code":"if (FALSE) { # interactive() install_mc() # upload a CSV file tf <- tempfile() write.csv(iris, tf, row.names = FALSE) mc_mb(\"play/iris\") mc_cp(tf, \"play/iris/iris.csv\")  # read first 12 lines from the CSV mc_sql(\"play/iris/iris.csv\", query = \"select * from S3Object limit 12\")   }"},{"path":"https://cboettig.github.io/minioclient/news/index.html","id":"minioclient-005","dir":"Changelog","previous_headings":"","what":"minioclient 0.0.5","title":"minioclient 0.0.5","text":"CRAN release: 2023-09-02 CRAN-policy based bugfix release. bug-fix: 0.0.4 release introduced unit tests wrote ~/.mc. Configuration files now placed minio_path() directory, using OS-specific path tools::R_user_dir(), configured options(\"minioclient.dir\") bug-fix: 0.0.4 introduced unit tests downloaded binary without prompt. install_mc() now prompt install interactive mode must called explicitly batch scripts. bug-fix: 0.0.4 tests may fail gracefully depending external resources. now patched.","code":""},{"path":"https://cboettig.github.io/minioclient/news/index.html","id":"minioclient-004","dir":"Changelog","previous_headings":"","what":"minioclient 0.0.4","title":"minioclient 0.0.4","text":"CRAN release: 2023-08-09 Refactored function mc_ls() provide results data.frame mc_sql() function added, can query CSV, JSON parquet objects using sql (S3 Select API sql syntax) mc_head() function added, reads first n lines object returns string mc_cat() function added, can useful reading previewing smaller file directly object storage server without first requiring download locally","code":""},{"path":"https://cboettig.github.io/minioclient/news/index.html","id":"minioclient-003","dir":"Changelog","previous_headings":"","what":"minioclient 0.0.3","title":"minioclient 0.0.3","text":"New function, mc_config_set(), can used set session tokens #1. mc_mb() gains optional arguments, e.g. error bucket exists. mc_rb() prompts first interactive mode.","code":""},{"path":"https://cboettig.github.io/minioclient/news/index.html","id":"minioclient-002","dir":"Changelog","previous_headings":"","what":"minioclient 0.0.2","title":"minioclient 0.0.2","text":"CRAN release: 2023-06-29 Added NEWS.md file track changes package. Adds helper functions everything done mc() Extend documentation","code":""}]
